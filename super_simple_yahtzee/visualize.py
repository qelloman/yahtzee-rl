import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import statistics
from scipy.stats import norm

a2c_scores = [28, 32, 22, 23, 22, 34, 31, 24, 15, 23, 36, 15, 27, 24, 23, 28, 38, 27, 24, 26, 34, 22, 29, 32, 27, 25, 23, 29, 32, 28, 15, 22, 19, 33, 26, 35, 37, 19, 27, 29, 35, 22, 31, 31, 22, 17, 25, 19, 26, 21, 34, 19, 30, 27, 28, 35, 20, 34, 18, 31, 21, 25, 27, 19, 23, 37, 30, 33, 23, 25, 22, 18, 24, 28, 23, 27, 23, 23, 24, 20, 28, 19, 24, 26, 31, 26, 25, 25, 38, 32, 22, 28, 25, 29, 24, 22, 22, 26, 27, 29]
dqn_scores = [35, 37, 32, 21, 26, 29, 28, 31, 19, 28, 30, 32, 21, 30, 30, 39, 30, 34, 39, 27, 24, 31, 29, 32, 51, 30, 35, 29, 30, 34, 17, 31, 29, 17, 26, 22, 29, 25, 31, 27, 30, 23, 37, 24, 26, 35, 41, 27, 19, 39, 26, 22, 27, 30, 24, 31, 28, 36, 21, 27, 31, 29, 26, 28, 25, 27, 18, 33, 20, 42, 18, 31, 28, 29, 27, 40, 34, 29, 30, 24, 33, 27, 21, 23, 29, 37, 19, 32, 36, 27, 34, 32, 27, 31, 32, 26, 21, 34, 23, 28]
base_scores = [20, 11, 6, 3, 20, 8, 26, 6, 0, 14, 15, 28, 18, 18, 9, 6, 4, 7, 21, 9, 9, 14, 12, 20, 3, 4, 3, 20, 11, 8, 10, 9, 28, 14, 12, 8, 15, 14, 12, 2, 17, 15, 13, 10, 22, 19, 9, 16, 12, 18, 14, 15, 23, 10, 2, 18, 7, 14, 7, 11, 6, 6, 12, 12, 17, 1, 7, 11, 27, 32, 6, 22, 14, 7, 11, 15, 17, 26, 25, 15, 15, 13, 18, 25, 5, 12, 22, 10, 18, 17, 18, 10, 5, 19, 27, 12, 0, 5, 0, 17]
human_scores = [41, 25, 34, 47, 34, 18, 30, 33, 25, 34, 39, 15, 30, 22, 35, 23, 28, 27, 30, 37]
qtable_scores = [26, 4, 15, 9, 12, 25, 15, 7, 14, 20, 24, 4, 1, 3, 10, 23, 21, 3, 3, 7, 14, 12, 21, 29, 9, 21, 4, 13, 20, 11, 7, 13, 5, 7, 17, 21, 26, 17, 15, 14, 21, 22, 13, 10, 12, 6, 16, 6, 12, 7, 14, 6, 14, 6, 26, 8, 17, 9, 8, 8, 12, 14, 18, 8, 15, 22, 17, 22, 13, 8, 15, 8, 16, 29, 11, 16, 17, 15, 11, 14, 9, 20, 23, 26, 17, 11, 17, 14, 12, 8, 28, 8, 21, 17, 15, 5, 9, 15, 26, 5]

fig, axs = plt.subplots(5, 1)
for ax in axs:
    ax.set_xlim(0, 50)

axs[0].hist(human_scores, bins=10)
axs[1].hist(base_scores, bins=10)
axs[2].hist(qtable_scores, bins=10)
axs[3].hist(dqn_scores, bins=10)
axs[4].hist(a2c_scores, bins=10)

for idx, ax in enumerate(axs):
    if idx == 0:
        mu, std = norm.fit(human_scores)
    elif idx == 1:
        mu, std = norm.fit(base_scores)
    elif idx == 2:
        mu, std = norm.fit(qtable_scores)
    elif idx == 3:
        mu, std = norm.fit(dqn_scores)
    else:
        mu, std = norm.fit(a2c_scores)

    x = np.linspace(0, 50, 200)
    ymin, ymax = ax.get_ylim()
    p = norm.pdf(x, mu, std)
    print(mu, std)
    ax.plot(x, p*ymax*15)
plt.show()
